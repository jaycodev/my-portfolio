---
import { Moon, Sun } from '@/components/icons'
---

<div class="relative ml-1 mr-1">
  <button
    transition:persist
    id="theme-toggle-btn"
    class="appearance-none border-none flex hover:scale-125 transition cursor-pointer"
  >
    <span class="sr-only">Elige el tema</span>
    <Sun id="light" class="theme-toggle-icon size-4 transition-all" />
    <Moon id="dark" class="theme-toggle-icon absolute size-4 transition-all" />
  </button>
</div>

<style>
  @keyframes scale-up-center {
    from {
      transform: scale(0.8);
      opacity: 0;
    }

    to {
      transform: scale(1);
      opacity: 1;
    }
  }
</style>

<script is:inline>
  let remove = null
  const matchMedia = window.matchMedia('(prefers-color-scheme: dark)')

  const getThemePreference = () => {
    if (typeof localStorage !== 'undefined') {
      return localStorage.getItem('theme') ?? 'system'
    }

    return matchMedia.matches ? 'dark' : 'light'
  }

  const updateIcon = (themePreference) => {
    const resolved =
      themePreference === 'system' ? (matchMedia.matches ? 'dark' : 'light') : themePreference

    document.querySelectorAll('.theme-toggle-icon').forEach((element) => {
      element.style.scale = element.id === resolved ? '1' : '0'
    })
  }

  const updateTheme = () => {
    if (remove != null) {
      remove()
    }
    matchMedia.addEventListener('change', updateTheme)
    remove = () => {
      matchMedia.removeEventListener('change', updateTheme)
    }

    const themePreference = getThemePreference()
    const isDark =
      themePreference === 'dark' || (themePreference === 'system' && matchMedia.matches)

    updateIcon(themePreference)
    document.documentElement.classList[isDark ? 'add' : 'remove']('dark')
  }

  updateTheme()

  document.getElementById('theme-toggle-btn').addEventListener('click', (e) => {
    e.stopPropagation()

    const currentPref = getThemePreference()
    const currentResolved =
      currentPref === 'system' ? (matchMedia.matches ? 'dark' : 'light') : currentPref
    const newPref = currentResolved === 'dark' ? 'light' : 'dark'

    localStorage.setItem('theme', newPref)
    updateTheme()
  })

  document.addEventListener('astro:after-swap', () => {
    updateTheme()
    window.scrollTo({ left: 0, top: 0, behavior: 'instant' })
  })
</script>
